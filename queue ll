Implement QUEUE data structure using Linked listÂ (Enqueue,
Dequeue, Display function)


#include<stdio.h>;
#include<stdlib.h>;

struct node
{
int data;
struct node *next;
};

struct node *front = NULL, *rear = NULL;

void enqueue(int val)
{
struct node *newNode = malloc(sizeof(struct node));
newNode-&gt;data = val;
newNode-&gt;next = NULL;

if(front == NULL &amp;&amp; rear == NULL)
front = rear = newNode;
else
{
rear-&gt;next = newNode;

rear = newNode;
}
}

void dequeue()
{
struct node *temp;

if(front == NULL)
printf(&quot;Queue is Empty.\n&quot;);
else
{
temp = front;

front = front-&gt;next;

if(front == NULL)
rear = NULL;

free(temp);
}

}

void printList()
{
struct node *temp = front;

while(temp)
{
printf(&quot;%d-&gt;&quot;,temp-&gt;data);
temp = temp-&gt;next;
}
printf(&quot;NULL\n&quot;);
}

int main()
{
enqueue(15);
enqueue(27);
enqueue(13);
printf(&quot;Queue :&quot;);
printList();

dequeue();
printf(&quot;After dequeue the new Queue :&quot;);
printList();
dequeue();
printf(&quot;After dequeue the new Queue :&quot;);
printList();

return 0;
}
